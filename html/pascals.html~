    <!DOCTYPE html>
    <html>
    <head>
    <meta charset='UTF-8'/>
    <script src='../lib/d3.js'></script>
    <script src='../lib/analysis.js'></script>
    <script src='../lib/functions.js'></script>
    <script src='../lib/tools.js'></script>
    <script src='../lib/matrix.js'></script>
    <script src='../lib/statistics.js'></script>
    <script src='../lib/graphics.js'></script>
    <script src='../lib/signal.js'></script>
    <script src='leela.js'></script>
    <link rel="stylesheet" href="../css/styles.css">
    <style>
    body {
	background : black;
    }
    .red .points {
	stroke:none;
	fill:red;
    }
    .green .points {
	stroke:none;
	fill:#0A0;
    }
    .blue .points {
	stroke:none;
	fill:#44F;
    }
    .golden .points {
	stroke:none;
	fill:orange;
    }
    .purple .points {
	stroke:none;
	fill:purple;
    }
    .cian .points {
	stroke:none;
	fill:#0AA;
    }
    .yellow .points {
	stroke:none;
	fill:#AA0;
    }
    .label {
	font-size : 150%;
    }
    .disk {
	fill: white;
	fill-opacity : 1;
    }
</style>
    </head>
    <body>
    <script>

var q31 =  [[0,1,2],
	    [2,0,1],
	    [1,2,0]]

var q32 =  [[0,1,2],
	    [2,0,1],
	    [1,2,0]]

var s6 = [[0,1,2,3,4,5],
	  [1,0,4,5,2,3],
	  [2,5,0,4,3,1],
	  [3,4,5,0,1,2],
	  [4,3,1,2,5,0],
	  [5,2,3,1,0,4]]

function z(n) {
    return nestList(x => x.rotatel(), range(0,n),n-1)
}

function directProd(g1,g2)
{
    var n1 = g1.length, n2 = g2.length
    var p1 = plus(g1), p2 = plus(g2)
    els = range(0,n1).outer(range(0,n2),(x,y) => [x,y])
    return group(els,(([a1,b1],[a2,b2]) => [p1(a1,a2),p2(b1,b2)]))
}

function group(els,prod)
{
    var ind = a => els.position(x => x.toString() == a.toString())
    return els.map(a => els.map(b => ind(prod(a,b))))
}

var v4 =  directProd(z(2),z(2))

function plus(g)
{
    return (x,y) => g[x][y]
}

function fibs(g,[a,b],n)
{
    res= [a,b]
    for(var i = 2 ; i < n; i++)
    {
	res.push(plus(g)(res[i-1],res[i-2]))
    }
    return res
}

var g = directProd(directProd(z(2),z(3)),z(4)), N = g.length, k = floor(log(N,81))
var n = 64
var p = new Graphics(createSVG('fig1'),{'size':900,'aspectRatio':1})
    .xRange([-n,n]).yRange([-n,n])

function step(k)
{
    m = g.length-1
    var row = lst => [0].concat(lst).zipWith(lst.concat([0]),plus(g))
    //var start = Bernoulli(0.6).samples(n)
    //	    var start = [1,2,0,2,2,1,0,1].repeat(200).take(k)
    //	    var start = [1].repeat(k)
    var start = [1]
    var Wrap = (x,y) => y==0 ? [1,1] : [1+y*cos(2*pi/m*x/y),1+y*sin(2*pi/m*x/y)]
    tri = i => nestList(row,[i],n).mapappend((r,y) => r.map((n,x) => [n,Wrap(x,y)]))
    var R = (a,[x,y]) => vmul(rotate(a),[x,y,1]).most()
    pts = nest((p,i) => p.concat(tri(i+1).map(([n,p]) => [n,R(i/m*2*pi,p)])), [], m)
    
    /*	    p.cleanPaper()
	    .listPlot(pts.filter(([n,_]) => n == 1).map(x => x[1]),{'class':'green'})
	    .listPlot(pts.filter(([n,_]) => n == 2).map(x => x[1]),{'class':'red'})
	    .listPlot(pts.filter(([n,_]) => n == 3).map(x => x[1]),{'class':'blue'})
	    .listPlot(pts.filter(([n,_]) => n == 4).map(x => x[1]),{'class':'golden'})
	    .listPlot(pts.filter(([n,_]) => n == 5).map(x => x[1]),{'class':'purple'})
	    .listPlot(pts.filter(([n,_]) => n == 6).map(x => x[1]),{'class':'cian'})
    */
    pts.forEach(([n,pt]) => p.disk(pt,n/(1+g.length)/2,{'class':'disk'}))
    //	range(0,k+2).map(i => p.label(N**i,{'at':[n/2+N**i/2+1,n-N**i]}))
}
var i = 2
//	window.setInterval(() => step(i=(i+1) % 81),50)
//step(0)

function step2(m,k)
{
    var g = z(m), n = 2*169
    var row = lst => [0].concat(lst).zipWith(lst.concat([0]),plus(g))
    var Wrap = (x,y) => y==0 ? [1,1] : [1+y*cos(2*pi/6*x/y),1+y*sin(2*pi/6*x/y)]
    tri = nestList(row,[1],n).mapappend((r,y) => r.map((n,x) => [n,Wrap(x,y)]))
    var R = (a,[x,y]) => vmul(rotate(a),[x,y,1]).most()
    pts = tri.map(([n,p]) => [n,R(k/6*2*pi,p)])
    p.xRange([-n,n]).yRange([-n,n])
    pts.forEach(([n,pt]) => p.disk(pt,n/(1+m)/2,{'class':'disk'}))
    //	range(0,k+2).map(i => p.label(N**i,{'at':[n/2+N**i/2+1,n-N**i]}))
}
step2(2,0)
step2(3,1)
step2(5,2)
step2(7,3)
step2(11,4)
step2(13,5)

</script>
    </body>
    </html>	

